-- THIS SCRIPT DOES NOT MODIFY THE DATA IN ANY WAY (for the most part)
-- ITS JOB IS JUST RETRIEVE FROM AND SAVE TO MEMORY AND THE CLOUD
local json = require("modules.json")
--local folder = "Trick Colors test"
local data = {}
sound_playing = false -- this is used to filter the music

--daily cash reward
local daily_reward_streak
local last_day -- the last day the game was played. It's the number of days elapsed since 0:00 jan 1970
local base_reward = 10

local get_day = function(total_seconds)
    local time_days = math.floor(total_seconds / 86400)
	return time_days
end

local retrieve_data = function()
	local file = sys.get_save_file(folder, "tc2_data")
	local table = sys.load(file)
	if #table == 0 then
		money = 1000
		brakes = 3
		coins = 10
		lives = 3
		last_ad_time = 0
		highscore = 0
		daily_reward_streak = 0
		last_day = get_day(os.time())
	else
		table = json.decode(table[1])
		money = table[1]
		brakes = table[2]
		coins = table[3]
		lives = table[4]
		last_ad_time = table[5]
		highscore = table[6]
		daily_reward_streak = table[7]
		last_day = table[8]
	end
end

local save_data = function()
	local file = sys.get_save_file(folder, "tc2_data")
	local values = {money, brakes, coins, lives, last_ad_time, highscore, daily_reward_streak, last_day}
	for i, v in ipairs(values) do
		table.insert(data, i, v)
	end
	local data_enc = json.encode(data)
	sys.save(file, {data_enc})
end

function init(self)
	retrieve_data()
	--calculate the daily reward
	if get_day(os.time()) - last_day == 1 then
		daily_reward_streak = daily_reward_streak + 1
		money = money + (base_reward * daily_reward_streak)
	elseif get_day(os.time()) - last_day > 1 then
		daily_reward_streak = 1
		money = money + (base_reward * daily_reward_streak)
	end
	last_day = get_day(os.time()) -- record the date
end

function final(self)
	save_data()
end

function on_message(self, message_id, message, sender)
	local msg_save_data = hash("save_data") 
	if message_id == msg_save_data then
		save_data()
	end
end