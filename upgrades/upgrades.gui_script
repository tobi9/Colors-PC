local TouchFb = require("modules.animation")

local input_nodes = {"_menu", 'buy_brakes', 'buy_lives', 'buy_coins', 'unlck_clrs', 'daily_gift', 'get_money', 'deals'}

--prices of the commodities sold in the shop and their currencies
local brake_price = 50 -- $
local live_price = 5 -- coins
local coin_price = 1000 -- $

local update_info = function()
    local m = gui.get_node("money")
    gui.set_text(m, "$"..tostring(money))
    local b = gui.get_node("brakes")
    gui.set_text(b, "BRAKES\n"..tostring(brakes))
    local l = gui.get_node("lives")
    gui.set_text(l, "LIVES\n"..tostring(lives))
    local c = gui.get_node("coins")
    gui.set_text(c, "COINS\n"..tostring(coins))
    local u = gui.get_node("unlckd_clrs")
    local Colors = require("modules.colors")
    local len = #unlocked_colors_table
    gui.set_text(u, len)
end

--Countdown timer stuff
local is_timer_zero -- a boolean value true if timer is on 0 and false if timer > 0
local duration

local start_countdown = function()
    if duration > 0 then
        duration = duration - 1
    end
    local sec = duration % 60
    if sec < 10 then
        sec = "0"..sec
    end
    local min = math.floor(duration/60) % 60
    if min < 10 then
        min = "0"..min
    end
    local hour = math.floor(math.floor(duration/60)/60)
    if hour < 10 then
        hour = "0"..hour
    end
    local countdown_node = gui.get_node('gift')
    gui.set_text(countdown_node, hour..":"..min..":"..sec)
    if duration > 0 then
        msg.post(".", "continue_countdown")
    else
        msg.post(".", "countdown_done")        
    end
end

local clear_info = function()
    local node = gui.get_node("info")
    gui.set_text(node, " ")
end


function init(self)
    math.randomseed(os.time() * 1007)
    --retrieve countdown data
    local file = sys.get_save_file(folder, "countdown_data")
    local table = sys.load(file)
    if #table ~= 0 then
        local elapsed_time = os.time() - table[1] --calculate how many seconds have passed since the last exit.table[1] is the time of exit 
        local time_left = table[2] - elapsed_time -- calulate how much time left the countdown has. table[2] is the duration of the coundown at exit
        if time_left <= 0 then
            duration = 0
        else
            duration = time_left
        end
        is_timer_zero = false
        start_countdown()    
    else
        duration = 0
        start_countdown()
    end
    
    msg.post(".", 'acquire_input_focus')
    -- node each node to its appropriate color
    local Customizer = require("modules.customizer")
    local col_name = "upgrades" -- this is needed by the customizer to avoid conflicts in memory
	local box_nodes = {'title', "_menu", "_board"}
	for k, v in ipairs(box_nodes) do
		Customizer.set_node_color(v, col_name)
    end
    -- set the button labels on the board to the board's color
    local labels = {"brake_plus", "live_plus", "coin_plus", "unlck_clr", "gift", "dls", "get_money_txt"}
    for k, v in ipairs(labels) do
        gui.set_color(gui.get_node(v), gui.get_color(gui.get_node("_board")))
    end
    update_info()
    --animate the button
    TouchFb.bounce_on_y_axis("deals")
end

function final(self)
    local exit_time = os.time()
    local file = sys.get_save_file(folder, "countdown_data")
    local table = {exit_time, duration}
    sys.save(file, table)
end

local clear_info = function()
    local node = gui.get_node("info")
    gui.set_text(node, " ")
end

local button_tapped
local handle_input = function()
    if button_tapped == "_menu" then
        msg.post(main, "unload_upgrades")
    elseif button_tapped == "buy_brakes" then
        if money >= brake_price then
            msg.post("#cash_sound", "play_sound", {delay = 0, gain = 1})
            money = money - brake_price
            brakes = brakes + 1
        else
            local node = gui.get_node("info")
            gui.set_text(node, "YOU CAN'T AFFORD\nIT")
            timer.delay(1, false, clear_info)
        end
    elseif button_tapped == "buy_lives" then
        if coins >= live_price then
            msg.post("#coin_sound", "play_sound", {delay = 0, gain = 1})
            coins = coins - live_price
            lives = lives + 1
        else
            local node = gui.get_node("info")
            gui.set_text(node, "YOU CAN'T AFFORD\nIT")
            timer.delay(1, false, clear_info)
        end
    elseif button_tapped == "buy_coins" then
        if money >= coin_price then
            msg.post("#cash_sound", "play_sound", {delay = 0, gain = 1})
            money = money - coin_price
            coins = coins + 1
        else
            local node = gui.get_node("info")
            gui.set_text(node, "YOU CAN'T AFFORD\nIT")
            timer.delay(1, false, clear_info)
        end
    elseif button_tapped == "unlck_clrs" then
        msg.post(main, "load_color_options")
    elseif button_tapped == "daily_gift" then
        local node = gui.get_node("info")
        if is_timer_zero then
            msg.post("#success_sound", "play_sound", {delay = 0, gain = 1})
            --stop the button animation
            local node = gui.get_node("daily_gift")
            gui.cancel_animation(node, "position.y")
            local gifts = {
                --cash
                50, 100, 200, 300, 400, 500,
                --brakes
                2, 3, 4, 5,
                --lives
                1, 2, 3,
                --coins
                5, 10
            }
            local random_key = math.random(#gifts)
            local node = gui.get_node("info")
            if random_key <= 6 then
                money = money + gifts[random_key]
                gui.set_text(node, "YOU GOT\n$"..gifts[random_key])
                timer.delay(1, false, clear_info)
            elseif random_key > 6 and random_key <= 10 then
                brakes = brakes + gifts[random_key]
                gui.set_text(node, "YOU GOT\n"..gifts[random_key].." BRAKES")
                timer.delay(1, false, clear_info)
            elseif random_key > 10 and random_key <= 13 then
                lives = lives + gifts[random_key]
                gui.set_text(node, "YOU GOT\n"..gifts[random_key].." LIVES")
                timer.delay(1, false, clear_info)
            elseif random_key > 13 then
                coins = coins + gifts[random_key]
                gui.set_text(node, "YOU GOT\n"..gifts[random_key].." COINS")
                timer.delay(1, false, clear_info)
            end
            update_info()
            --set the countdown to 24 hours 
            duration = 86400
            start_countdown()
    
        else
            gui.set_text(node, "COME BACK\nLATER")
            timer.delay(1, false, clear_info)
        end
    elseif button_tapped == "get_money" then
        msg.post(main, "load_iap")
    elseif button_tapped == "deals" then
        msg.post(main, "load_sales", {caller = 'upgrades'})
    end
    update_info()
end

--message ids
local cont_countdown = hash('continue_countdown')
local countdown_done = hash('countdown_done')
function on_message(self, message_id, message, sender)
    if message_id == cont_countdown then
        timer.delay(1, false, start_countdown) -- The delay is not set to 1 because it's slower
    elseif message_id == countdown_done then
        local countdown_node = gui.get_node('gift')
        gui.set_text(countdown_node, "COLLECT")
        is_timer_zero = true
    	--animate the button
    	TouchFb.bounce_on_y_axis("daily_gift")
    end
end

local touch = hash("touch")
local back = hash('back')
function on_input(self, action_id, action)
    if action_id == touch and action.released then
        for k, v in ipairs(input_nodes) do
            local node = gui.get_node(v)
            if gui.pick_node(node, action.x, action.y) then 
                button_tapped = v
                TouchFb.touch_feedback(node, handle_input)
            end
        end
    elseif action_id == back and action.released then
		msg.post(main, "click")
        button_tapped = '_menu'
        handle_input()
    end
end